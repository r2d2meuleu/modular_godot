[gd_resource type="VisualShader" load_steps=32 format=2]

[sub_resource type="OpenSimplexNoise" id=1]

[sub_resource type="NoiseTexture" id=2]
flags = 39
width = 64
height = 64
seamless = true
noise = SubResource( 1 )

[sub_resource type="VisualShaderNodeTexture" id=3]
output_port_for_preview = 0
texture = SubResource( 2 )

[sub_resource type="VisualShaderNodeInput" id=4]
input_name = "time"

[sub_resource type="VisualShaderNodeVectorCompose" id=5]
output_port_for_preview = 0
default_input_values = [ 0, 0.5, 1, 0.5, 2, 0.0 ]

[sub_resource type="VisualShaderNodeVectorDecompose" id=6]

[sub_resource type="VisualShaderNodeScalarFunc" id=7]
output_port_for_preview = 0
function = 1

[sub_resource type="VisualShaderNodeScalarOp" id=8]
default_input_values = [ 0, 0.0, 1, 5.0 ]
operator = 2

[sub_resource type="VisualShaderNodeScalarFunc" id=9]
output_port_for_preview = 0
function = 0

[sub_resource type="VisualShaderNodeScalarOp" id=10]
default_input_values = [ 0, 0.0, 1, 5.0 ]
operator = 1

[sub_resource type="VisualShaderNodeVectorDecompose" id=11]

[sub_resource type="VisualShaderNodeScalarOp" id=12]
default_input_values = [ 0, 0.0, 1, 5.0 ]
operator = 1

[sub_resource type="VisualShaderNodeInput" id=13]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarOp" id=14]
default_input_values = [ 0, 0.0, 1, 5.0 ]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=15]
default_input_values = [ 0, 0.0, 1, 5.0 ]

[sub_resource type="VisualShaderNodeScalarOp" id=16]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 5.0 ]

[sub_resource type="VisualShaderNodeScalarOp" id=17]
default_input_values = [ 0, 0.0, 1, 5.0 ]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=18]
default_input_values = [ 0, 0.0, 1, 5.0 ]
operator = 1

[sub_resource type="VisualShaderNodeScalarOp" id=19]
default_input_values = [ 0, 0.0, 1, 5.0 ]
operator = 1

[sub_resource type="VisualShaderNodeScalarOp" id=20]
default_input_values = [ 0, 0.0, 1, 5.0 ]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=21]
default_input_values = [ 0, 0.0, 1, 5.0 ]

[sub_resource type="VisualShaderNodeScalarOp" id=22]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 5.0 ]
operator = 1

[sub_resource type="VisualShaderNodeScalarFunc" id=23]
output_port_for_preview = 0
function = 16

[sub_resource type="VisualShaderNodeInput" id=24]
input_name = "texture"

[sub_resource type="VisualShaderNodeScalarOp" id=25]
default_input_values = [ 0, 0.0, 1, 5.0 ]
operator = 2

[sub_resource type="VisualShaderNodeScalarUniform" id=26]
uniform_name = "offset"

[sub_resource type="VisualShaderNodeScalarOp" id=27]

[sub_resource type="VisualShaderNodeTexture" id=28]
source = 5

[sub_resource type="VisualShaderNodeVectorOp" id=29]

[sub_resource type="VisualShaderNodeVectorOp" id=30]
output_port_for_preview = 0
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0.5, 0.5, 0.5 ) ]
operator = 1

[sub_resource type="VisualShaderNodeVectorOp" id=31]
output_port_for_preview = 0
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0.1, 0.1, 0.1 ) ]
operator = 2

[resource]
code = "shader_type canvas_item;
uniform float offset;
uniform sampler2D tex_frg_2;



void vertex() {
// Output:0

}

void fragment() {
// Input:4
	vec3 n_out4p0 = vec3(UV, 0.0);

// Input:24
	float n_out24p0 = TIME;

// ScalarUniform:51
	float n_out51p0 = offset;

// ScalarOp:52
	float n_out52p0 = n_out24p0 + n_out51p0;

// ScalarOp:50
	float n_in50p1 = 5.00000;
	float n_out50p0 = n_out52p0 * n_in50p1;

// ScalarFunc:49
	float n_out49p0 = ceil(n_out50p0);

// ScalarFunc:34
	float n_out34p0 = cos(n_out49p0);

// VectorDecompose:33
	float n_out33p0 = n_out4p0.x;
	float n_out33p1 = n_out4p0.y;
	float n_out33p2 = n_out4p0.z;

// VectorDecompose:38
	vec3 n_in38p0 = vec3(0.00000, 0.00000, 0.00000);
	float n_out38p0 = n_in38p0.x;
	float n_out38p1 = n_in38p0.y;
	float n_out38p2 = n_in38p0.z;

// ScalarOp:37
	float n_out37p0 = n_out33p0 - n_out38p0;

// ScalarOp:35
	float n_out35p0 = n_out34p0 * n_out37p0;

// ScalarFunc:36
	float n_out36p0 = sin(n_out49p0);

// ScalarOp:39
	float n_out39p0 = n_out33p1 - n_out38p1;

// ScalarOp:40
	float n_out40p0 = n_out36p0 * n_out39p0;

// ScalarOp:41
	float n_out41p0 = n_out40p0 + n_out38p0;

// ScalarOp:42
	float n_out42p0 = n_out35p0 + n_out41p0;

// ScalarOp:44
	float n_out44p0 = n_out33p1 - n_out38p1;

// ScalarOp:43
	float n_out43p0 = n_out34p0 * n_out44p0;

// ScalarOp:45
	float n_out45p0 = n_out33p0 - n_out38p0;

// ScalarOp:46
	float n_out46p0 = n_out36p0 * n_out45p0;

// ScalarOp:47
	float n_out47p0 = n_out46p0 + n_out38p1;

// ScalarOp:48
	float n_out48p0 = n_out43p0 - n_out47p0;

// VectorCompose:32
	float n_in32p2 = 0.00000;
	vec3 n_out32p0 = vec3(n_out42p0, n_out48p0, n_in32p2);

// Texture:2
	vec4 tex_frg_2_read = texture(tex_frg_2, n_out32p0.xy);
	vec3 n_out2p0 = tex_frg_2_read.rgb;
	float n_out2p1 = tex_frg_2_read.a;

// VectorOp:8
	vec3 n_in8p1 = vec3(0.50000, 0.50000, 0.50000);
	vec3 n_out8p0 = n_out2p0 - n_in8p1;

// VectorOp:9
	vec3 n_in9p1 = vec3(0.10000, 0.10000, 0.10000);
	vec3 n_out9p0 = n_out8p0 * n_in9p1;

// VectorOp:7
	vec3 n_out7p0 = n_out4p0 + n_out9p0;

// Input:5

// Texture:6
	vec3 n_out6p0;
	float n_out6p1;
	{
		vec4 TEXTURE_tex_read = texture(TEXTURE, n_out7p0.xy);
		n_out6p0 = TEXTURE_tex_read.rgb;
		n_out6p1 = TEXTURE_tex_read.a;
	}

// Output:0
	COLOR.rgb = n_out6p0;
	COLOR.a = n_out6p1;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -1237, -221 )
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2( 520, 140 )
nodes/fragment/2/node = SubResource( 3 )
nodes/fragment/2/position = Vector2( -600, 220 )
nodes/fragment/4/node = SubResource( 13 )
nodes/fragment/4/position = Vector2( -2180, -40 )
nodes/fragment/5/node = SubResource( 24 )
nodes/fragment/5/position = Vector2( 0, 280 )
nodes/fragment/6/node = SubResource( 28 )
nodes/fragment/6/position = Vector2( 200, 140 )
nodes/fragment/7/node = SubResource( 29 )
nodes/fragment/7/position = Vector2( 0, 140 )
nodes/fragment/8/node = SubResource( 30 )
nodes/fragment/8/position = Vector2( -400, 220 )
nodes/fragment/9/node = SubResource( 31 )
nodes/fragment/9/position = Vector2( -200, 220 )
nodes/fragment/24/node = SubResource( 4 )
nodes/fragment/24/position = Vector2( -3280, -760 )
nodes/fragment/32/node = SubResource( 5 )
nodes/fragment/32/position = Vector2( -480, -420 )
nodes/fragment/33/node = SubResource( 6 )
nodes/fragment/33/position = Vector2( -1940, -320 )
nodes/fragment/34/node = SubResource( 7 )
nodes/fragment/34/position = Vector2( -1880, -780 )
nodes/fragment/35/node = SubResource( 8 )
nodes/fragment/35/position = Vector2( -1240, -820 )
nodes/fragment/36/node = SubResource( 9 )
nodes/fragment/36/position = Vector2( -1900, -600 )
nodes/fragment/37/node = SubResource( 10 )
nodes/fragment/37/position = Vector2( -1520, -740 )
nodes/fragment/38/node = SubResource( 11 )
nodes/fragment/38/position = Vector2( -1940, -180 )
nodes/fragment/39/node = SubResource( 12 )
nodes/fragment/39/position = Vector2( -1520, -620 )
nodes/fragment/40/node = SubResource( 14 )
nodes/fragment/40/position = Vector2( -1280, -620 )
nodes/fragment/41/node = SubResource( 15 )
nodes/fragment/41/position = Vector2( -1120, -620 )
nodes/fragment/42/node = SubResource( 16 )
nodes/fragment/42/position = Vector2( -880, -760 )
nodes/fragment/43/node = SubResource( 17 )
nodes/fragment/43/position = Vector2( -1220, -380 )
nodes/fragment/44/node = SubResource( 18 )
nodes/fragment/44/position = Vector2( -1400, -380 )
nodes/fragment/45/node = SubResource( 19 )
nodes/fragment/45/position = Vector2( -1420, -240 )
nodes/fragment/46/node = SubResource( 20 )
nodes/fragment/46/position = Vector2( -1220, -260 )
nodes/fragment/47/node = SubResource( 21 )
nodes/fragment/47/position = Vector2( -1020, -200 )
nodes/fragment/48/node = SubResource( 22 )
nodes/fragment/48/position = Vector2( -820, -480 )
nodes/fragment/49/node = SubResource( 23 )
nodes/fragment/49/position = Vector2( -2500, -700 )
nodes/fragment/50/node = SubResource( 25 )
nodes/fragment/50/position = Vector2( -2720, -800 )
nodes/fragment/51/node = SubResource( 26 )
nodes/fragment/51/position = Vector2( -3300, -580 )
nodes/fragment/52/node = SubResource( 27 )
nodes/fragment/52/position = Vector2( -3040, -720 )
nodes/fragment/connections = PoolIntArray( 5, 0, 6, 2, 6, 0, 0, 0, 8, 0, 9, 0, 9, 0, 7, 1, 2, 0, 8, 0, 4, 0, 33, 0, 33, 0, 37, 0, 38, 0, 37, 1, 33, 1, 39, 0, 38, 1, 39, 1, 34, 0, 35, 0, 37, 0, 35, 1, 36, 0, 40, 0, 39, 0, 40, 1, 38, 0, 41, 1, 40, 0, 41, 0, 41, 0, 42, 1, 35, 0, 42, 0, 42, 0, 32, 0, 44, 0, 43, 1, 45, 0, 46, 1, 46, 0, 47, 0, 33, 1, 44, 0, 38, 1, 44, 1, 38, 0, 45, 1, 34, 0, 43, 0, 36, 0, 46, 0, 38, 1, 47, 1, 43, 0, 48, 0, 47, 0, 48, 1, 48, 0, 32, 1, 33, 0, 45, 0, 7, 0, 6, 0, 4, 0, 7, 0, 32, 0, 2, 0, 49, 0, 36, 0, 49, 0, 34, 0, 6, 1, 0, 1, 50, 0, 49, 0, 24, 0, 52, 0, 51, 0, 52, 1, 52, 0, 50, 0, 5, 0, 6, 2, 6, 0, 0, 0, 8, 0, 9, 0, 9, 0, 7, 1, 2, 0, 8, 0, 4, 0, 33, 0, 33, 0, 37, 0, 38, 0, 37, 1, 33, 1, 39, 0, 38, 1, 39, 1, 34, 0, 35, 0, 37, 0, 35, 1, 36, 0, 40, 0, 39, 0, 40, 1, 38, 0, 41, 1, 40, 0, 41, 0, 41, 0, 42, 1, 35, 0, 42, 0, 42, 0, 32, 0, 44, 0, 43, 1, 45, 0, 46, 1, 46, 0, 47, 0, 33, 1, 44, 0, 38, 1, 44, 1, 38, 0, 45, 1, 34, 0, 43, 0, 36, 0, 46, 0, 38, 1, 47, 1, 43, 0, 48, 0, 47, 0, 48, 1, 48, 0, 32, 1, 33, 0, 45, 0, 7, 0, 6, 0, 4, 0, 7, 0, 32, 0, 2, 0, 49, 0, 36, 0, 49, 0, 34, 0, 6, 1, 0, 1, 50, 0, 49, 0, 24, 0, 52, 0, 51, 0, 52, 1, 52, 0, 50, 0 )
